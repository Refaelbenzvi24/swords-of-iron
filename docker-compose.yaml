services:
  postgres:
    container_name: postgres.swords-of-iron_container
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: ${DB_DATABASE:-swords-of-iron}
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - main_network

  pgadmin:
    container_name: pgadmin.swords-of-iron_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    depends_on:
      - postgres

  message_broker:
    container_name: rabbitmq.swords-of-iron_container
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - main_network
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped

  cronjobs_service:
    container_name: cronjobs.swords-of-iron_container
    depends_on:
      - message_broker
      - postgres
    environment:
      MESSAGE_BROKER_HOST: ${MESSAGE_BROKER_HOST:-localhost}
      MESSAGE_BROKER_USER: ${MESSAGE_BROKER_USER:-guest}
      MESSAGE_BROKER_PASSWORD: ${MESSAGE_BROKER_PASSWORD:-guest}
      MESSAGE_BROKER_PROTOCOL: ${MESSAGE_BROKER_PROTOCOL:-amqp}
    build:
      context: .
      dockerfile: ./apps/cronjobs/Dockerfile
    restart: unless-stopped
    networks:
      - main_network

  scraper_service:
    container_name: scraper.swords-of-iron_container
    depends_on:
      - message_broker
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://root:1234@localhost:5432/swords-of-iron?schema=public}
      MESSAGE_BROKER_HOST: ${MESSAGE_BROKER_HOST:-localhost}
      MESSAGE_BROKER_USER: ${MESSAGE_BROKER_USER:-guest}
      MESSAGE_BROKER_PASSWORD: ${MESSAGE_BROKER_PASSWORD:-guest}
      MESSAGE_BROKER_PROTOCOL: ${MESSAGE_BROKER_PROTOCOL:-amqp}
    build:
      context: .
      dockerfile: apps/scraper/Dockerfile
    restart: unless-stopped
    networks:
      - main_network

  nextjs:
    container_name: nextjs.swords-of-iron_container
    depends_on:
      - postgres
      - message_broker
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://root:1234@localhost:5432/swords-of-iron?schema=public}
      MESSAGE_BROKER_HOST: ${MESSAGE_BROKER_HOST:-localhost}
      MESSAGE_BROKER_USER: ${MESSAGE_BROKER_USER:-guest}
      MESSAGE_BROKER_PASSWORD: ${MESSAGE_BROKER_PASSWORD:-guest}
      MESSAGE_BROKER_PROTOCOL: ${MESSAGE_BROKER_PROTOCOL:-amqp}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-QTd5OzatIvH0zIncZHzC2xV483xq7St/ACxMY+OSIRA=}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      EMAIL_PORT: ${EMAIL_PORT:-_}
      EMAIL_HOST: ${EMAIL_HOST:-_}
      EMAIL_USER: ${EMAIL_USER:-_}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-_}
      EMAIL_SERVICE: ${EMAIL_SERVICE:-_}
      CI: ${CI:-false}
      NEXT_STANDALONE: ${NEXT_STANDALONE:-true}
    build:
      context: .
      dockerfile: ./apps/nextjs/Dockerfile
    restart: unless-stopped
    networks:
      - main_network

networks:
  main_network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
